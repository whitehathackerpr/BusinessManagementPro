Business Management System (BIZ_MANAGE_PRO)
A comprehensive business management system built with FastAPI and React, designed to handle all aspects of business operations.

Version License Python React FastAPI PostgreSQL Redis

🌟 Features
Frontend
🎨 Modern Web3-inspired UI with glassmorphism effects
📱 Fully responsive design
🔄 Real-time updates with WebSocket
📊 Interactive dashboards and analytics
🔔 Real-time notifications
🌙 Dark mode support
🌐 RTL (Right-to-Left) language support
Backend
🔒 JWT-based authentication
📦 PostgreSQL database with SQLAlchemy ORM
🔄 Redis for caching and real-time features
📧 Email notifications
📊 Advanced analytics and reporting
🔍 Full-text search
📱 RESTful API with versioning
🔒 Rate limiting and security features
📝 API Documentation with Swagger UI
⚡ High-performance with async support
🛠️ Tech Stack
Frontend
React 18
Vite
Material-UI v5
React Query
Socket.IO Client
Chart.js
React Router v6
Axios
date-fns
Backend
Python 3.12
FastAPI
SQLAlchemy
PostgreSQL
Redis
JWT
WebSocket
Pandas & NumPy
scikit-learn
Pydantic
Uvicorn
Infrastructure
Docker
Docker Compose
Nginx
Prometheus
Grafana
pgAdmin
🚀 Getting Started
Prerequisites
Docker
Docker Compose
Git
Installation
Clone the repository:
git clone https://github.com/whitehathackerpr/BIZ_MANAGE_PRO.git
cd BIZ_MANAGE_PRO
Set up environment variables:
# Backend
cp backend/.env.example backend/.env
# Edit backend/.env with your configuration

# Frontend
cp frontend/.env.example frontend/.env
# Edit frontend/.env with your configuration
Start the application:
docker-compose up -d
The application will be available at:

Frontend: http://localhost:5173
Backend API: http://localhost:8000
API Documentation: http://localhost:8000/docs
pgAdmin: http://localhost:5050
Prometheus: http://localhost:9090
Grafana: http://localhost:3000
Development
Start the backend in development mode:
cd backend
python -m venv venv
source venv/bin/activate  # On Windows: venv\Scripts\activate
pip install -r requirements.txt
python run.py
Start the frontend in development mode:
cd frontend
npm install
npm run dev
📚 Documentation
API Documentation
Authentication API
User Management API
Branch Management API
Inventory Management API
Analytics API
Database Schema
User Model
Branch Model
Product Model
Order Model
Customer Model
Employee Model
Inventory Model
Notification Model
Development Guide
Setup Guide
Code Style Guide
Testing Guide
Deployment Guide
🔒 Security
JWT-based authentication
Role-based access control (RBAC)
Rate limiting
CORS protection
Input validation with Pydantic
SQL injection prevention
XSS protection
CSRF protection
📊 Analytics Features
Real-time sales analytics
Inventory tracking
Customer insights
Employee performance metrics
Branch performance comparison
Predictive analytics
Custom report generation
Advanced Portal Endpoints
Customer Feedback
POST /customers/{customer_id}/feedback — Add feedback for a customer
GET /customers/{customer_id}/feedback — List feedback for a customer
Customer Loyalty
GET /customers/{customer_id}/loyalty — Get loyalty points for a customer
POST /customers/{customer_id}/loyalty — Add/redeem loyalty points for a customer (body: points integer)
Supplier Analytics
GET /analytics/suppliers — Get supplier-specific analytics (total, new, growth rate)
Messaging & Notifications
Use /chats endpoints for messaging between any users, including suppliers and customers. Create chats with relevant participants.
Use /notifications endpoints to send, list, and manage notifications for all user types, including suppliers and customers.
🤝 Contributing
Fork the repository
Create your feature branch (git checkout -b feature/AmazingFeature)
Commit your changes (git commit -m 'Add some AmazingFeature')
Push to the branch (git push origin feature/AmazingFeature)
Open a Pull Request
📝 License
This project is licensed under the MIT License - see the LICENSE file for details.

👥 Authors
Akandwanaho Ivan Alvin- Initial work - GitHub
🙏 Acknowledgments
FastAPI team for the excellent web framework
Material-UI team for the amazing UI components
React team for the powerful frontend library
All contributors who have helped shape this project
📞 Support
For support, email support@4codex.com or join our Slack channel.

Made with ❤️ by Akandwanaho Ivan Alvin